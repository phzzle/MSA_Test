/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Deal as PrismaDeal, User as PrismaUser } from "@prisma/client";

export class DealServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DealCountArgs, "select">): Promise<number> {
    return this.prisma.deal.count(args);
  }

  async deals<T extends Prisma.DealFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DealFindManyArgs>
  ): Promise<PrismaDeal[]> {
    return this.prisma.deal.findMany<Prisma.DealFindManyArgs>(args);
  }
  async deal<T extends Prisma.DealFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DealFindUniqueArgs>
  ): Promise<PrismaDeal | null> {
    return this.prisma.deal.findUnique(args);
  }
  async createDeal<T extends Prisma.DealCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DealCreateArgs>
  ): Promise<PrismaDeal> {
    return this.prisma.deal.create<T>(args);
  }
  async updateDeal<T extends Prisma.DealUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DealUpdateArgs>
  ): Promise<PrismaDeal> {
    return this.prisma.deal.update<T>(args);
  }
  async deleteDeal<T extends Prisma.DealDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DealDeleteArgs>
  ): Promise<PrismaDeal> {
    return this.prisma.deal.delete(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.deal
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
